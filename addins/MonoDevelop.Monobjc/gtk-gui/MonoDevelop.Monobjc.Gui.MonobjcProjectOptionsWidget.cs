
// This file has been generated by the GUI designer. Do not modify.
namespace MonoDevelop.Monobjc.Gui
{
	public partial class MonobjcProjectOptionsWidget
	{
		private global::Gtk.Notebook notebook;
		private global::Gtk.Table tableGeneral;
		private global::Gtk.CheckButton checkbuttonBundleSigning;
		private global::Gtk.CheckButton checkbuttonEntitlements;
		private global::Gtk.ComboBox comboboxApplicationCategory;
		private global::Gtk.ComboBox comboboxOSVersion;
		private global::Gtk.ComboBox comboboxSigningCertificates;
		private global::Gtk.ComboBox comboboxType;
		private global::Gtk.Entry entryBundleIdentifier;
		private global::Gtk.Entry entryBundleVersion;
		private global::Gtk.FileChooserButton filechooserbuttonBundleIcon;
		private global::Gtk.FileChooserButton filechooserbuttonMainNib;
		private global::Gtk.HSeparator hseparator1;
		private global::Gtk.Image image81;
		private global::Gtk.Label labelApplicationCategory;
		private global::Gtk.Label labelBundleIcon;
		private global::Gtk.Label labelBundleIdentifier;
		private global::Gtk.Label labelBundleVersion;
		private global::Gtk.Label labelFrameworks;
		private global::Gtk.Label labelGeneralDescription;
		private global::Gtk.Label labelMainNib;
		private global::Gtk.Label labelOSVersion;
		private global::Gtk.Label labelSigningCertificate;
		private global::Gtk.Label labelType;
		private global::Gtk.ScrolledWindow scrolledwindowFrameworks;
		private global::Gtk.TreeView treeviewFrameworks;
		private global::Gtk.Label labelGeneral;
		private global::Gtk.Table tableEmbedding;
		private global::Gtk.ComboBox comboboxArchitectures;
		private global::Gtk.HBox hboxAdditionalAssemblies;
		private global::Gtk.ScrolledWindow scrolledwindowAdditionnalAssemblies;
		private global::Gtk.TreeView treeviewAdditionnalAssemblies;
		private global::Gtk.VBox vbox3;
		private global::Gtk.Button buttonAddAdditionnalAssemblies;
		private global::Gtk.Button buttonRemoveAdditionnalAssemblies;
		private global::Gtk.HBox hboxAdditionnalLibraries;
		private global::Gtk.ScrolledWindow scrolledwindowAdditionnalLibraries;
		private global::Gtk.TreeView treeviewAdditionnalLibraries;
		private global::Gtk.VBox vbox5;
		private global::Gtk.Button buttonAddAdditionnalLibraries;
		private global::Gtk.Button buttonRemoveAdditionnalLibraries;
		private global::Gtk.HBox hboxExcludedAssemblies;
		private global::Gtk.ScrolledWindow scrolledwindowExcludedAssemblies;
		private global::Gtk.TreeView treeviewExcludedAssemblies;
		private global::Gtk.VBox vbox4;
		private global::Gtk.Button buttonAddExcludedAssemblies;
		private global::Gtk.Button buttonRemoveExcludedAssemblies;
		private global::Gtk.Label labelAdditionnalAssemblies;
		private global::Gtk.Label labelAdditionnalLibraries;
		private global::Gtk.Label labelArchitectures;
		private global::Gtk.Label labelEmbeddedFrameworks;
		private global::Gtk.Label labelEmbeddingDescription;
		private global::Gtk.Label labelExcludedAssemblies;
		private global::Gtk.ScrolledWindow scrolledwindowEmbeddedFrameworks;
		private global::Gtk.TreeView treeviewEmbeddedFrameworks;
		private global::Gtk.Label labelEmbedding;
		private global::Gtk.Table tableArchiving;
		private global::Gtk.CheckButton checkbuttonArchivePackage;
		private global::Gtk.ComboBox comboboxPackagingCertificates;
		private global::Gtk.Label labelArchivingDescription;
		private global::Gtk.Label labelPackagingCertificate;
		private global::Gtk.Label labelArchiving;
		private global::Gtk.Table tableAdvanced;
		private global::Gtk.CheckButton checkbuttonCombineArtwork;
		private global::Gtk.CheckButton checkbuttonEncryptArtwork;
		private global::Gtk.ComboBox comboboxDevelopmentRegion;
		private global::Gtk.Label labelArchivingDescription1;
		private global::Gtk.Label labelDevelopmentRegion;
		private global::Gtk.Label labelAdvanced;
		
		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget MonoDevelop.Monobjc.Gui.MonobjcProjectOptionsWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "MonoDevelop.Monobjc.Gui.MonobjcProjectOptionsWidget";
			// Container child MonoDevelop.Monobjc.Gui.MonobjcProjectOptionsWidget.Gtk.Container+ContainerChild
			this.notebook = new global::Gtk.Notebook ();
			this.notebook.CanFocus = true;
			this.notebook.Name = "notebook";
			this.notebook.CurrentPage = 0;
			// Container child notebook.Gtk.Notebook+NotebookChild
			this.tableGeneral = new global::Gtk.Table (((uint)(15)), ((uint)(3)), false);
			this.tableGeneral.Name = "tableGeneral";
			this.tableGeneral.RowSpacing = ((uint)(6));
			this.tableGeneral.ColumnSpacing = ((uint)(6));
			this.tableGeneral.BorderWidth = ((uint)(12));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.checkbuttonBundleSigning = new global::Gtk.CheckButton ();
			this.checkbuttonBundleSigning.CanFocus = true;
			this.checkbuttonBundleSigning.Name = "checkbuttonBundleSigning";
			this.checkbuttonBundleSigning.Label = global::Mono.Unix.Catalog.GetString ("Code Sign Application");
			this.checkbuttonBundleSigning.DrawIndicator = true;
			this.checkbuttonBundleSigning.UseUnderline = true;
			this.tableGeneral.Add (this.checkbuttonBundleSigning);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.checkbuttonBundleSigning]));
			w1.TopAttach = ((uint)(9));
			w1.BottomAttach = ((uint)(10));
			w1.LeftAttach = ((uint)(1));
			w1.RightAttach = ((uint)(3));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.checkbuttonEntitlements = new global::Gtk.CheckButton ();
			this.checkbuttonEntitlements.CanFocus = true;
			this.checkbuttonEntitlements.Name = "checkbuttonEntitlements";
			this.checkbuttonEntitlements.Label = global::Mono.Unix.Catalog.GetString ("Use Entitlements (requires an App.entitlements file)");
			this.checkbuttonEntitlements.DrawIndicator = true;
			this.checkbuttonEntitlements.UseUnderline = true;
			this.tableGeneral.Add (this.checkbuttonEntitlements);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.checkbuttonEntitlements]));
			w2.TopAttach = ((uint)(11));
			w2.BottomAttach = ((uint)(12));
			w2.LeftAttach = ((uint)(1));
			w2.RightAttach = ((uint)(3));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.comboboxApplicationCategory = global::Gtk.ComboBox.NewText ();
			this.comboboxApplicationCategory.Name = "comboboxApplicationCategory";
			this.tableGeneral.Add (this.comboboxApplicationCategory);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.comboboxApplicationCategory]));
			w3.TopAttach = ((uint)(3));
			w3.BottomAttach = ((uint)(4));
			w3.LeftAttach = ((uint)(2));
			w3.RightAttach = ((uint)(3));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.comboboxOSVersion = global::Gtk.ComboBox.NewText ();
			this.comboboxOSVersion.Name = "comboboxOSVersion";
			this.tableGeneral.Add (this.comboboxOSVersion);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.comboboxOSVersion]));
			w4.TopAttach = ((uint)(6));
			w4.BottomAttach = ((uint)(7));
			w4.LeftAttach = ((uint)(2));
			w4.RightAttach = ((uint)(3));
			w4.XOptions = ((global::Gtk.AttachOptions)(4));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.comboboxSigningCertificates = global::Gtk.ComboBox.NewText ();
			this.comboboxSigningCertificates.Name = "comboboxSigningCertificates";
			this.tableGeneral.Add (this.comboboxSigningCertificates);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.comboboxSigningCertificates]));
			w5.TopAttach = ((uint)(10));
			w5.BottomAttach = ((uint)(11));
			w5.LeftAttach = ((uint)(2));
			w5.RightAttach = ((uint)(3));
			w5.XOptions = ((global::Gtk.AttachOptions)(4));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.comboboxType = global::Gtk.ComboBox.NewText ();
			this.comboboxType.Name = "comboboxType";
			this.tableGeneral.Add (this.comboboxType);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.comboboxType]));
			w6.TopAttach = ((uint)(1));
			w6.BottomAttach = ((uint)(2));
			w6.LeftAttach = ((uint)(1));
			w6.RightAttach = ((uint)(3));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.entryBundleIdentifier = new global::Gtk.Entry ();
			this.entryBundleIdentifier.CanFocus = true;
			this.entryBundleIdentifier.Name = "entryBundleIdentifier";
			this.entryBundleIdentifier.IsEditable = true;
			this.entryBundleIdentifier.InvisibleChar = '●';
			this.tableGeneral.Add (this.entryBundleIdentifier);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.entryBundleIdentifier]));
			w7.TopAttach = ((uint)(4));
			w7.BottomAttach = ((uint)(5));
			w7.LeftAttach = ((uint)(2));
			w7.RightAttach = ((uint)(3));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.entryBundleVersion = new global::Gtk.Entry ();
			this.entryBundleVersion.CanFocus = true;
			this.entryBundleVersion.Name = "entryBundleVersion";
			this.entryBundleVersion.IsEditable = true;
			this.entryBundleVersion.InvisibleChar = '●';
			this.tableGeneral.Add (this.entryBundleVersion);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.entryBundleVersion]));
			w8.TopAttach = ((uint)(5));
			w8.BottomAttach = ((uint)(6));
			w8.LeftAttach = ((uint)(2));
			w8.RightAttach = ((uint)(3));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.filechooserbuttonBundleIcon = new global::Gtk.FileChooserButton (global::Mono.Unix.Catalog.GetString ("Select Bundle Icon"), ((global::Gtk.FileChooserAction)(0)));
			this.filechooserbuttonBundleIcon.Name = "filechooserbuttonBundleIcon";
			this.tableGeneral.Add (this.filechooserbuttonBundleIcon);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.filechooserbuttonBundleIcon]));
			w9.TopAttach = ((uint)(8));
			w9.BottomAttach = ((uint)(9));
			w9.LeftAttach = ((uint)(2));
			w9.RightAttach = ((uint)(3));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.filechooserbuttonMainNib = new global::Gtk.FileChooserButton (global::Mono.Unix.Catalog.GetString ("Select Main NIB File"), ((global::Gtk.FileChooserAction)(0)));
			this.filechooserbuttonMainNib.Name = "filechooserbuttonMainNib";
			this.tableGeneral.Add (this.filechooserbuttonMainNib);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.filechooserbuttonMainNib]));
			w10.TopAttach = ((uint)(7));
			w10.BottomAttach = ((uint)(8));
			w10.LeftAttach = ((uint)(2));
			w10.RightAttach = ((uint)(3));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.hseparator1 = new global::Gtk.HSeparator ();
			this.hseparator1.Name = "hseparator1";
			this.tableGeneral.Add (this.hseparator1);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.hseparator1]));
			w11.TopAttach = ((uint)(2));
			w11.BottomAttach = ((uint)(3));
			w11.RightAttach = ((uint)(3));
			w11.XOptions = ((global::Gtk.AttachOptions)(4));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.image81 = new global::Gtk.Image ();
			this.image81.WidthRequest = 128;
			this.image81.HeightRequest = 128;
			this.image81.Name = "image81";
			this.image81.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("monobjc-128.png");
			this.tableGeneral.Add (this.image81);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.image81]));
			w12.TopAttach = ((uint)(3));
			w12.BottomAttach = ((uint)(12));
			w12.XOptions = ((global::Gtk.AttachOptions)(4));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelApplicationCategory = new global::Gtk.Label ();
			this.labelApplicationCategory.Name = "labelApplicationCategory";
			this.labelApplicationCategory.Xalign = 1F;
			this.labelApplicationCategory.LabelProp = global::Mono.Unix.Catalog.GetString ("Application Category:");
			this.tableGeneral.Add (this.labelApplicationCategory);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelApplicationCategory]));
			w13.TopAttach = ((uint)(3));
			w13.BottomAttach = ((uint)(4));
			w13.LeftAttach = ((uint)(1));
			w13.RightAttach = ((uint)(2));
			w13.XOptions = ((global::Gtk.AttachOptions)(4));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelBundleIcon = new global::Gtk.Label ();
			this.labelBundleIcon.Name = "labelBundleIcon";
			this.labelBundleIcon.Xalign = 1F;
			this.labelBundleIcon.LabelProp = global::Mono.Unix.Catalog.GetString ("Bundle Icon:");
			this.tableGeneral.Add (this.labelBundleIcon);
			global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelBundleIcon]));
			w14.TopAttach = ((uint)(8));
			w14.BottomAttach = ((uint)(9));
			w14.LeftAttach = ((uint)(1));
			w14.RightAttach = ((uint)(2));
			w14.XOptions = ((global::Gtk.AttachOptions)(4));
			w14.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelBundleIdentifier = new global::Gtk.Label ();
			this.labelBundleIdentifier.Name = "labelBundleIdentifier";
			this.labelBundleIdentifier.Xalign = 1F;
			this.labelBundleIdentifier.LabelProp = global::Mono.Unix.Catalog.GetString ("Bundle Identifier:");
			this.tableGeneral.Add (this.labelBundleIdentifier);
			global::Gtk.Table.TableChild w15 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelBundleIdentifier]));
			w15.TopAttach = ((uint)(4));
			w15.BottomAttach = ((uint)(5));
			w15.LeftAttach = ((uint)(1));
			w15.RightAttach = ((uint)(2));
			w15.XOptions = ((global::Gtk.AttachOptions)(4));
			w15.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelBundleVersion = new global::Gtk.Label ();
			this.labelBundleVersion.Name = "labelBundleVersion";
			this.labelBundleVersion.Xalign = 1F;
			this.labelBundleVersion.LabelProp = global::Mono.Unix.Catalog.GetString ("Bundle Version:");
			this.tableGeneral.Add (this.labelBundleVersion);
			global::Gtk.Table.TableChild w16 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelBundleVersion]));
			w16.TopAttach = ((uint)(5));
			w16.BottomAttach = ((uint)(6));
			w16.LeftAttach = ((uint)(1));
			w16.RightAttach = ((uint)(2));
			w16.XOptions = ((global::Gtk.AttachOptions)(4));
			w16.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelFrameworks = new global::Gtk.Label ();
			this.labelFrameworks.Name = "labelFrameworks";
			this.labelFrameworks.Xalign = 0F;
			this.labelFrameworks.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Frameworks</b>");
			this.labelFrameworks.UseMarkup = true;
			this.tableGeneral.Add (this.labelFrameworks);
			global::Gtk.Table.TableChild w17 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelFrameworks]));
			w17.TopAttach = ((uint)(12));
			w17.BottomAttach = ((uint)(13));
			w17.RightAttach = ((uint)(3));
			w17.XOptions = ((global::Gtk.AttachOptions)(4));
			w17.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelGeneralDescription = new global::Gtk.Label ();
			this.labelGeneralDescription.Name = "labelGeneralDescription";
			this.labelGeneralDescription.Xalign = 0F;
			this.labelGeneralDescription.LabelProp = global::Mono.Unix.Catalog.GetString ("In this section, you can define the properties of the project (either an application or a library).");
			this.labelGeneralDescription.Wrap = true;
			this.labelGeneralDescription.Justify = ((global::Gtk.Justification)(3));
			this.tableGeneral.Add (this.labelGeneralDescription);
			global::Gtk.Table.TableChild w18 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelGeneralDescription]));
			w18.RightAttach = ((uint)(3));
			w18.XOptions = ((global::Gtk.AttachOptions)(4));
			w18.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelMainNib = new global::Gtk.Label ();
			this.labelMainNib.Name = "labelMainNib";
			this.labelMainNib.Xalign = 1F;
			this.labelMainNib.LabelProp = global::Mono.Unix.Catalog.GetString ("Main NIB File:");
			this.tableGeneral.Add (this.labelMainNib);
			global::Gtk.Table.TableChild w19 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelMainNib]));
			w19.TopAttach = ((uint)(7));
			w19.BottomAttach = ((uint)(8));
			w19.LeftAttach = ((uint)(1));
			w19.RightAttach = ((uint)(2));
			w19.XOptions = ((global::Gtk.AttachOptions)(4));
			w19.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelOSVersion = new global::Gtk.Label ();
			this.labelOSVersion.Name = "labelOSVersion";
			this.labelOSVersion.Xalign = 1F;
			this.labelOSVersion.LabelProp = global::Mono.Unix.Catalog.GetString ("Deployment Target:");
			this.tableGeneral.Add (this.labelOSVersion);
			global::Gtk.Table.TableChild w20 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelOSVersion]));
			w20.TopAttach = ((uint)(6));
			w20.BottomAttach = ((uint)(7));
			w20.LeftAttach = ((uint)(1));
			w20.RightAttach = ((uint)(2));
			w20.XOptions = ((global::Gtk.AttachOptions)(4));
			w20.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelSigningCertificate = new global::Gtk.Label ();
			this.labelSigningCertificate.Name = "labelSigningCertificate";
			this.labelSigningCertificate.Xalign = 1F;
			this.labelSigningCertificate.LabelProp = global::Mono.Unix.Catalog.GetString ("Signing Certificate:");
			this.tableGeneral.Add (this.labelSigningCertificate);
			global::Gtk.Table.TableChild w21 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelSigningCertificate]));
			w21.TopAttach = ((uint)(10));
			w21.BottomAttach = ((uint)(11));
			w21.LeftAttach = ((uint)(1));
			w21.RightAttach = ((uint)(2));
			w21.XOptions = ((global::Gtk.AttachOptions)(4));
			w21.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelType = new global::Gtk.Label ();
			this.labelType.Name = "labelType";
			this.labelType.Xalign = 1F;
			this.labelType.LabelProp = global::Mono.Unix.Catalog.GetString ("Project Type:");
			this.tableGeneral.Add (this.labelType);
			global::Gtk.Table.TableChild w22 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelType]));
			w22.TopAttach = ((uint)(1));
			w22.BottomAttach = ((uint)(2));
			w22.XOptions = ((global::Gtk.AttachOptions)(4));
			w22.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.scrolledwindowFrameworks = new global::Gtk.ScrolledWindow ();
			this.scrolledwindowFrameworks.CanFocus = true;
			this.scrolledwindowFrameworks.Name = "scrolledwindowFrameworks";
			this.scrolledwindowFrameworks.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child scrolledwindowFrameworks.Gtk.Container+ContainerChild
			this.treeviewFrameworks = new global::Gtk.TreeView ();
			this.treeviewFrameworks.CanFocus = true;
			this.treeviewFrameworks.Name = "treeviewFrameworks";
			this.treeviewFrameworks.HeadersVisible = false;
			this.scrolledwindowFrameworks.Add (this.treeviewFrameworks);
			this.tableGeneral.Add (this.scrolledwindowFrameworks);
			global::Gtk.Table.TableChild w24 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.scrolledwindowFrameworks]));
			w24.TopAttach = ((uint)(13));
			w24.BottomAttach = ((uint)(14));
			w24.RightAttach = ((uint)(3));
			this.notebook.Add (this.tableGeneral);
			// Notebook tab
			this.labelGeneral = new global::Gtk.Label ();
			this.labelGeneral.Name = "labelGeneral";
			this.labelGeneral.LabelProp = global::Mono.Unix.Catalog.GetString ("General");
			this.notebook.SetTabLabel (this.tableGeneral, this.labelGeneral);
			this.labelGeneral.ShowAll ();
			// Container child notebook.Gtk.Notebook+NotebookChild
			this.tableEmbedding = new global::Gtk.Table (((uint)(11)), ((uint)(2)), false);
			this.tableEmbedding.Name = "tableEmbedding";
			this.tableEmbedding.RowSpacing = ((uint)(6));
			this.tableEmbedding.ColumnSpacing = ((uint)(6));
			this.tableEmbedding.BorderWidth = ((uint)(12));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.comboboxArchitectures = global::Gtk.ComboBox.NewText ();
			this.comboboxArchitectures.Name = "comboboxArchitectures";
			this.tableEmbedding.Add (this.comboboxArchitectures);
			global::Gtk.Table.TableChild w26 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.comboboxArchitectures]));
			w26.TopAttach = ((uint)(1));
			w26.BottomAttach = ((uint)(2));
			w26.LeftAttach = ((uint)(1));
			w26.RightAttach = ((uint)(2));
			w26.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.hboxAdditionalAssemblies = new global::Gtk.HBox ();
			this.hboxAdditionalAssemblies.Name = "hboxAdditionalAssemblies";
			this.hboxAdditionalAssemblies.Spacing = 6;
			// Container child hboxAdditionalAssemblies.Gtk.Box+BoxChild
			this.scrolledwindowAdditionnalAssemblies = new global::Gtk.ScrolledWindow ();
			this.scrolledwindowAdditionnalAssemblies.CanFocus = true;
			this.scrolledwindowAdditionnalAssemblies.Name = "scrolledwindowAdditionnalAssemblies";
			this.scrolledwindowAdditionnalAssemblies.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child scrolledwindowAdditionnalAssemblies.Gtk.Container+ContainerChild
			this.treeviewAdditionnalAssemblies = new global::Gtk.TreeView ();
			this.treeviewAdditionnalAssemblies.CanFocus = true;
			this.treeviewAdditionnalAssemblies.Name = "treeviewAdditionnalAssemblies";
			this.treeviewAdditionnalAssemblies.HeadersVisible = false;
			this.scrolledwindowAdditionnalAssemblies.Add (this.treeviewAdditionnalAssemblies);
			this.hboxAdditionalAssemblies.Add (this.scrolledwindowAdditionnalAssemblies);
			global::Gtk.Box.BoxChild w28 = ((global::Gtk.Box.BoxChild)(this.hboxAdditionalAssemblies [this.scrolledwindowAdditionnalAssemblies]));
			w28.Position = 0;
			// Container child hboxAdditionalAssemblies.Gtk.Box+BoxChild
			this.vbox3 = new global::Gtk.VBox ();
			this.vbox3.Name = "vbox3";
			this.vbox3.Spacing = 6;
			// Container child vbox3.Gtk.Box+BoxChild
			this.buttonAddAdditionnalAssemblies = new global::Gtk.Button ();
			this.buttonAddAdditionnalAssemblies.CanFocus = true;
			this.buttonAddAdditionnalAssemblies.Name = "buttonAddAdditionnalAssemblies";
			this.buttonAddAdditionnalAssemblies.UseUnderline = true;
			// Container child buttonAddAdditionnalAssemblies.Gtk.Container+ContainerChild
			global::Gtk.Alignment w29 = new global::Gtk.Alignment (0.5F, 0.5F, 0F, 0F);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w30 = new global::Gtk.HBox ();
			w30.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w31 = new global::Gtk.Image ();
			w31.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-add", global::Gtk.IconSize.Menu);
			w30.Add (w31);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w33 = new global::Gtk.Label ();
			w33.LabelProp = global::Mono.Unix.Catalog.GetString ("Add");
			w33.UseUnderline = true;
			w30.Add (w33);
			w29.Add (w30);
			this.buttonAddAdditionnalAssemblies.Add (w29);
			this.vbox3.Add (this.buttonAddAdditionnalAssemblies);
			global::Gtk.Box.BoxChild w37 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.buttonAddAdditionnalAssemblies]));
			w37.Position = 0;
			w37.Expand = false;
			w37.Fill = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.buttonRemoveAdditionnalAssemblies = new global::Gtk.Button ();
			this.buttonRemoveAdditionnalAssemblies.CanFocus = true;
			this.buttonRemoveAdditionnalAssemblies.Name = "buttonRemoveAdditionnalAssemblies";
			this.buttonRemoveAdditionnalAssemblies.UseUnderline = true;
			// Container child buttonRemoveAdditionnalAssemblies.Gtk.Container+ContainerChild
			global::Gtk.Alignment w38 = new global::Gtk.Alignment (0.5F, 0.5F, 0F, 0F);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w39 = new global::Gtk.HBox ();
			w39.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w40 = new global::Gtk.Image ();
			w40.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-delete", global::Gtk.IconSize.Menu);
			w39.Add (w40);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w42 = new global::Gtk.Label ();
			w42.LabelProp = global::Mono.Unix.Catalog.GetString ("Remove");
			w42.UseUnderline = true;
			w39.Add (w42);
			w38.Add (w39);
			this.buttonRemoveAdditionnalAssemblies.Add (w38);
			this.vbox3.Add (this.buttonRemoveAdditionnalAssemblies);
			global::Gtk.Box.BoxChild w46 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.buttonRemoveAdditionnalAssemblies]));
			w46.Position = 1;
			w46.Expand = false;
			w46.Fill = false;
			this.hboxAdditionalAssemblies.Add (this.vbox3);
			global::Gtk.Box.BoxChild w47 = ((global::Gtk.Box.BoxChild)(this.hboxAdditionalAssemblies [this.vbox3]));
			w47.Position = 1;
			w47.Expand = false;
			w47.Fill = false;
			this.tableEmbedding.Add (this.hboxAdditionalAssemblies);
			global::Gtk.Table.TableChild w48 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.hboxAdditionalAssemblies]));
			w48.TopAttach = ((uint)(5));
			w48.BottomAttach = ((uint)(6));
			w48.RightAttach = ((uint)(2));
			w48.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.hboxAdditionnalLibraries = new global::Gtk.HBox ();
			this.hboxAdditionnalLibraries.Name = "hboxAdditionnalLibraries";
			this.hboxAdditionnalLibraries.Spacing = 6;
			// Container child hboxAdditionnalLibraries.Gtk.Box+BoxChild
			this.scrolledwindowAdditionnalLibraries = new global::Gtk.ScrolledWindow ();
			this.scrolledwindowAdditionnalLibraries.CanFocus = true;
			this.scrolledwindowAdditionnalLibraries.Name = "scrolledwindowAdditionnalLibraries";
			this.scrolledwindowAdditionnalLibraries.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child scrolledwindowAdditionnalLibraries.Gtk.Container+ContainerChild
			this.treeviewAdditionnalLibraries = new global::Gtk.TreeView ();
			this.treeviewAdditionnalLibraries.CanFocus = true;
			this.treeviewAdditionnalLibraries.Name = "treeviewAdditionnalLibraries";
			this.treeviewAdditionnalLibraries.HeadersVisible = false;
			this.scrolledwindowAdditionnalLibraries.Add (this.treeviewAdditionnalLibraries);
			this.hboxAdditionnalLibraries.Add (this.scrolledwindowAdditionnalLibraries);
			global::Gtk.Box.BoxChild w50 = ((global::Gtk.Box.BoxChild)(this.hboxAdditionnalLibraries [this.scrolledwindowAdditionnalLibraries]));
			w50.Position = 0;
			// Container child hboxAdditionnalLibraries.Gtk.Box+BoxChild
			this.vbox5 = new global::Gtk.VBox ();
			this.vbox5.Name = "vbox5";
			this.vbox5.Spacing = 6;
			// Container child vbox5.Gtk.Box+BoxChild
			this.buttonAddAdditionnalLibraries = new global::Gtk.Button ();
			this.buttonAddAdditionnalLibraries.CanFocus = true;
			this.buttonAddAdditionnalLibraries.Name = "buttonAddAdditionnalLibraries";
			this.buttonAddAdditionnalLibraries.UseUnderline = true;
			// Container child buttonAddAdditionnalLibraries.Gtk.Container+ContainerChild
			global::Gtk.Alignment w51 = new global::Gtk.Alignment (0.5F, 0.5F, 0F, 0F);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w52 = new global::Gtk.HBox ();
			w52.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w53 = new global::Gtk.Image ();
			w53.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-add", global::Gtk.IconSize.Menu);
			w52.Add (w53);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w55 = new global::Gtk.Label ();
			w55.LabelProp = global::Mono.Unix.Catalog.GetString ("Add");
			w55.UseUnderline = true;
			w52.Add (w55);
			w51.Add (w52);
			this.buttonAddAdditionnalLibraries.Add (w51);
			this.vbox5.Add (this.buttonAddAdditionnalLibraries);
			global::Gtk.Box.BoxChild w59 = ((global::Gtk.Box.BoxChild)(this.vbox5 [this.buttonAddAdditionnalLibraries]));
			w59.Position = 0;
			w59.Expand = false;
			w59.Fill = false;
			// Container child vbox5.Gtk.Box+BoxChild
			this.buttonRemoveAdditionnalLibraries = new global::Gtk.Button ();
			this.buttonRemoveAdditionnalLibraries.CanFocus = true;
			this.buttonRemoveAdditionnalLibraries.Name = "buttonRemoveAdditionnalLibraries";
			this.buttonRemoveAdditionnalLibraries.UseUnderline = true;
			// Container child buttonRemoveAdditionnalLibraries.Gtk.Container+ContainerChild
			global::Gtk.Alignment w60 = new global::Gtk.Alignment (0.5F, 0.5F, 0F, 0F);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w61 = new global::Gtk.HBox ();
			w61.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w62 = new global::Gtk.Image ();
			w62.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-delete", global::Gtk.IconSize.Menu);
			w61.Add (w62);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w64 = new global::Gtk.Label ();
			w64.LabelProp = global::Mono.Unix.Catalog.GetString ("Remove");
			w64.UseUnderline = true;
			w61.Add (w64);
			w60.Add (w61);
			this.buttonRemoveAdditionnalLibraries.Add (w60);
			this.vbox5.Add (this.buttonRemoveAdditionnalLibraries);
			global::Gtk.Box.BoxChild w68 = ((global::Gtk.Box.BoxChild)(this.vbox5 [this.buttonRemoveAdditionnalLibraries]));
			w68.Position = 1;
			w68.Expand = false;
			w68.Fill = false;
			this.hboxAdditionnalLibraries.Add (this.vbox5);
			global::Gtk.Box.BoxChild w69 = ((global::Gtk.Box.BoxChild)(this.hboxAdditionnalLibraries [this.vbox5]));
			w69.Position = 1;
			w69.Expand = false;
			w69.Fill = false;
			this.tableEmbedding.Add (this.hboxAdditionnalLibraries);
			global::Gtk.Table.TableChild w70 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.hboxAdditionnalLibraries]));
			w70.TopAttach = ((uint)(9));
			w70.BottomAttach = ((uint)(10));
			w70.RightAttach = ((uint)(2));
			w70.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.hboxExcludedAssemblies = new global::Gtk.HBox ();
			this.hboxExcludedAssemblies.Name = "hboxExcludedAssemblies";
			this.hboxExcludedAssemblies.Spacing = 6;
			// Container child hboxExcludedAssemblies.Gtk.Box+BoxChild
			this.scrolledwindowExcludedAssemblies = new global::Gtk.ScrolledWindow ();
			this.scrolledwindowExcludedAssemblies.CanFocus = true;
			this.scrolledwindowExcludedAssemblies.Name = "scrolledwindowExcludedAssemblies";
			this.scrolledwindowExcludedAssemblies.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child scrolledwindowExcludedAssemblies.Gtk.Container+ContainerChild
			this.treeviewExcludedAssemblies = new global::Gtk.TreeView ();
			this.treeviewExcludedAssemblies.CanFocus = true;
			this.treeviewExcludedAssemblies.Name = "treeviewExcludedAssemblies";
			this.treeviewExcludedAssemblies.HeadersVisible = false;
			this.scrolledwindowExcludedAssemblies.Add (this.treeviewExcludedAssemblies);
			this.hboxExcludedAssemblies.Add (this.scrolledwindowExcludedAssemblies);
			global::Gtk.Box.BoxChild w72 = ((global::Gtk.Box.BoxChild)(this.hboxExcludedAssemblies [this.scrolledwindowExcludedAssemblies]));
			w72.Position = 0;
			// Container child hboxExcludedAssemblies.Gtk.Box+BoxChild
			this.vbox4 = new global::Gtk.VBox ();
			this.vbox4.Name = "vbox4";
			this.vbox4.Spacing = 6;
			// Container child vbox4.Gtk.Box+BoxChild
			this.buttonAddExcludedAssemblies = new global::Gtk.Button ();
			this.buttonAddExcludedAssemblies.CanFocus = true;
			this.buttonAddExcludedAssemblies.Name = "buttonAddExcludedAssemblies";
			this.buttonAddExcludedAssemblies.UseUnderline = true;
			// Container child buttonAddExcludedAssemblies.Gtk.Container+ContainerChild
			global::Gtk.Alignment w73 = new global::Gtk.Alignment (0.5F, 0.5F, 0F, 0F);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w74 = new global::Gtk.HBox ();
			w74.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w75 = new global::Gtk.Image ();
			w75.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-add", global::Gtk.IconSize.Menu);
			w74.Add (w75);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w77 = new global::Gtk.Label ();
			w77.LabelProp = global::Mono.Unix.Catalog.GetString ("Add");
			w77.UseUnderline = true;
			w74.Add (w77);
			w73.Add (w74);
			this.buttonAddExcludedAssemblies.Add (w73);
			this.vbox4.Add (this.buttonAddExcludedAssemblies);
			global::Gtk.Box.BoxChild w81 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.buttonAddExcludedAssemblies]));
			w81.Position = 0;
			w81.Expand = false;
			w81.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.buttonRemoveExcludedAssemblies = new global::Gtk.Button ();
			this.buttonRemoveExcludedAssemblies.CanFocus = true;
			this.buttonRemoveExcludedAssemblies.Name = "buttonRemoveExcludedAssemblies";
			this.buttonRemoveExcludedAssemblies.UseUnderline = true;
			// Container child buttonRemoveExcludedAssemblies.Gtk.Container+ContainerChild
			global::Gtk.Alignment w82 = new global::Gtk.Alignment (0.5F, 0.5F, 0F, 0F);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w83 = new global::Gtk.HBox ();
			w83.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w84 = new global::Gtk.Image ();
			w84.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-delete", global::Gtk.IconSize.Menu);
			w83.Add (w84);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w86 = new global::Gtk.Label ();
			w86.LabelProp = global::Mono.Unix.Catalog.GetString ("Remove");
			w86.UseUnderline = true;
			w83.Add (w86);
			w82.Add (w83);
			this.buttonRemoveExcludedAssemblies.Add (w82);
			this.vbox4.Add (this.buttonRemoveExcludedAssemblies);
			global::Gtk.Box.BoxChild w90 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.buttonRemoveExcludedAssemblies]));
			w90.Position = 1;
			w90.Expand = false;
			w90.Fill = false;
			this.hboxExcludedAssemblies.Add (this.vbox4);
			global::Gtk.Box.BoxChild w91 = ((global::Gtk.Box.BoxChild)(this.hboxExcludedAssemblies [this.vbox4]));
			w91.Position = 1;
			w91.Expand = false;
			w91.Fill = false;
			this.tableEmbedding.Add (this.hboxExcludedAssemblies);
			global::Gtk.Table.TableChild w92 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.hboxExcludedAssemblies]));
			w92.TopAttach = ((uint)(7));
			w92.BottomAttach = ((uint)(8));
			w92.RightAttach = ((uint)(2));
			w92.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.labelAdditionnalAssemblies = new global::Gtk.Label ();
			this.labelAdditionnalAssemblies.Name = "labelAdditionnalAssemblies";
			this.labelAdditionnalAssemblies.Xalign = 0F;
			this.labelAdditionnalAssemblies.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Additionnal Assemblies</b>");
			this.labelAdditionnalAssemblies.UseMarkup = true;
			this.tableEmbedding.Add (this.labelAdditionnalAssemblies);
			global::Gtk.Table.TableChild w93 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.labelAdditionnalAssemblies]));
			w93.TopAttach = ((uint)(4));
			w93.BottomAttach = ((uint)(5));
			w93.RightAttach = ((uint)(2));
			w93.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.labelAdditionnalLibraries = new global::Gtk.Label ();
			this.labelAdditionnalLibraries.Name = "labelAdditionnalLibraries";
			this.labelAdditionnalLibraries.Xalign = 0F;
			this.labelAdditionnalLibraries.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Additionnal Libraries</b>");
			this.labelAdditionnalLibraries.UseMarkup = true;
			this.tableEmbedding.Add (this.labelAdditionnalLibraries);
			global::Gtk.Table.TableChild w94 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.labelAdditionnalLibraries]));
			w94.TopAttach = ((uint)(8));
			w94.BottomAttach = ((uint)(9));
			w94.RightAttach = ((uint)(2));
			w94.XOptions = ((global::Gtk.AttachOptions)(4));
			w94.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.labelArchitectures = new global::Gtk.Label ();
			this.labelArchitectures.Name = "labelArchitectures";
			this.labelArchitectures.Xalign = 1F;
			this.labelArchitectures.LabelProp = global::Mono.Unix.Catalog.GetString ("Target Mac OS Architectures:");
			this.tableEmbedding.Add (this.labelArchitectures);
			global::Gtk.Table.TableChild w95 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.labelArchitectures]));
			w95.TopAttach = ((uint)(1));
			w95.BottomAttach = ((uint)(2));
			w95.XOptions = ((global::Gtk.AttachOptions)(4));
			w95.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.labelEmbeddedFrameworks = new global::Gtk.Label ();
			this.labelEmbeddedFrameworks.Name = "labelEmbeddedFrameworks";
			this.labelEmbeddedFrameworks.Xalign = 0F;
			this.labelEmbeddedFrameworks.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Embedded Frameworks</b>");
			this.labelEmbeddedFrameworks.UseMarkup = true;
			this.tableEmbedding.Add (this.labelEmbeddedFrameworks);
			global::Gtk.Table.TableChild w96 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.labelEmbeddedFrameworks]));
			w96.TopAttach = ((uint)(2));
			w96.BottomAttach = ((uint)(3));
			w96.RightAttach = ((uint)(2));
			w96.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.labelEmbeddingDescription = new global::Gtk.Label ();
			this.labelEmbeddingDescription.Name = "labelEmbeddingDescription";
			this.labelEmbeddingDescription.Xalign = 0F;
			this.labelEmbeddingDescription.LabelProp = global::Mono.Unix.Catalog.GetString ("In this section, you can define what will be embedded in the application bundle (additional assemblies or native libraries).");
			this.labelEmbeddingDescription.Wrap = true;
			this.labelEmbeddingDescription.Justify = ((global::Gtk.Justification)(3));
			this.tableEmbedding.Add (this.labelEmbeddingDescription);
			global::Gtk.Table.TableChild w97 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.labelEmbeddingDescription]));
			w97.RightAttach = ((uint)(2));
			w97.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.labelExcludedAssemblies = new global::Gtk.Label ();
			this.labelExcludedAssemblies.Name = "labelExcludedAssemblies";
			this.labelExcludedAssemblies.Xalign = 0F;
			this.labelExcludedAssemblies.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Excluded Assemblies</b>");
			this.labelExcludedAssemblies.UseMarkup = true;
			this.tableEmbedding.Add (this.labelExcludedAssemblies);
			global::Gtk.Table.TableChild w98 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.labelExcludedAssemblies]));
			w98.TopAttach = ((uint)(6));
			w98.BottomAttach = ((uint)(7));
			w98.RightAttach = ((uint)(2));
			w98.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.scrolledwindowEmbeddedFrameworks = new global::Gtk.ScrolledWindow ();
			this.scrolledwindowEmbeddedFrameworks.CanFocus = true;
			this.scrolledwindowEmbeddedFrameworks.Name = "scrolledwindowEmbeddedFrameworks";
			this.scrolledwindowEmbeddedFrameworks.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child scrolledwindowEmbeddedFrameworks.Gtk.Container+ContainerChild
			this.treeviewEmbeddedFrameworks = new global::Gtk.TreeView ();
			this.treeviewEmbeddedFrameworks.CanFocus = true;
			this.treeviewEmbeddedFrameworks.Name = "treeviewEmbeddedFrameworks";
			this.treeviewEmbeddedFrameworks.HeadersVisible = false;
			this.scrolledwindowEmbeddedFrameworks.Add (this.treeviewEmbeddedFrameworks);
			this.tableEmbedding.Add (this.scrolledwindowEmbeddedFrameworks);
			global::Gtk.Table.TableChild w100 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.scrolledwindowEmbeddedFrameworks]));
			w100.TopAttach = ((uint)(3));
			w100.BottomAttach = ((uint)(4));
			w100.RightAttach = ((uint)(2));
			this.notebook.Add (this.tableEmbedding);
			global::Gtk.Notebook.NotebookChild w101 = ((global::Gtk.Notebook.NotebookChild)(this.notebook [this.tableEmbedding]));
			w101.Position = 1;
			// Notebook tab
			this.labelEmbedding = new global::Gtk.Label ();
			this.labelEmbedding.Name = "labelEmbedding";
			this.labelEmbedding.LabelProp = global::Mono.Unix.Catalog.GetString ("Embedding");
			this.notebook.SetTabLabel (this.tableEmbedding, this.labelEmbedding);
			this.labelEmbedding.ShowAll ();
			// Container child notebook.Gtk.Notebook+NotebookChild
			this.tableArchiving = new global::Gtk.Table (((uint)(4)), ((uint)(2)), false);
			this.tableArchiving.Name = "tableArchiving";
			this.tableArchiving.RowSpacing = ((uint)(6));
			this.tableArchiving.ColumnSpacing = ((uint)(6));
			this.tableArchiving.BorderWidth = ((uint)(12));
			// Container child tableArchiving.Gtk.Table+TableChild
			this.checkbuttonArchivePackage = new global::Gtk.CheckButton ();
			this.checkbuttonArchivePackage.CanFocus = true;
			this.checkbuttonArchivePackage.Name = "checkbuttonArchivePackage";
			this.checkbuttonArchivePackage.Label = global::Mono.Unix.Catalog.GetString ("Generate an archive package");
			this.checkbuttonArchivePackage.DrawIndicator = true;
			this.checkbuttonArchivePackage.UseUnderline = true;
			this.tableArchiving.Add (this.checkbuttonArchivePackage);
			global::Gtk.Table.TableChild w102 = ((global::Gtk.Table.TableChild)(this.tableArchiving [this.checkbuttonArchivePackage]));
			w102.TopAttach = ((uint)(1));
			w102.BottomAttach = ((uint)(2));
			w102.RightAttach = ((uint)(2));
			w102.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableArchiving.Gtk.Table+TableChild
			this.comboboxPackagingCertificates = global::Gtk.ComboBox.NewText ();
			this.comboboxPackagingCertificates.Name = "comboboxPackagingCertificates";
			this.tableArchiving.Add (this.comboboxPackagingCertificates);
			global::Gtk.Table.TableChild w103 = ((global::Gtk.Table.TableChild)(this.tableArchiving [this.comboboxPackagingCertificates]));
			w103.TopAttach = ((uint)(2));
			w103.BottomAttach = ((uint)(3));
			w103.LeftAttach = ((uint)(1));
			w103.RightAttach = ((uint)(2));
			w103.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableArchiving.Gtk.Table+TableChild
			this.labelArchivingDescription = new global::Gtk.Label ();
			this.labelArchivingDescription.Name = "labelArchivingDescription";
			this.labelArchivingDescription.Xalign = 0F;
			this.labelArchivingDescription.LabelProp = global::Mono.Unix.Catalog.GetString ("In this section, you can define if you want to generate an archive package for the application bundle. It is required if you plan to submit the application to the Mac AppStore.");
			this.labelArchivingDescription.Wrap = true;
			this.labelArchivingDescription.Justify = ((global::Gtk.Justification)(3));
			this.tableArchiving.Add (this.labelArchivingDescription);
			global::Gtk.Table.TableChild w104 = ((global::Gtk.Table.TableChild)(this.tableArchiving [this.labelArchivingDescription]));
			w104.RightAttach = ((uint)(2));
			w104.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableArchiving.Gtk.Table+TableChild
			this.labelPackagingCertificate = new global::Gtk.Label ();
			this.labelPackagingCertificate.Name = "labelPackagingCertificate";
			this.labelPackagingCertificate.Xalign = 1F;
			this.labelPackagingCertificate.LabelProp = global::Mono.Unix.Catalog.GetString ("Packaging Certificate:");
			this.tableArchiving.Add (this.labelPackagingCertificate);
			global::Gtk.Table.TableChild w105 = ((global::Gtk.Table.TableChild)(this.tableArchiving [this.labelPackagingCertificate]));
			w105.TopAttach = ((uint)(2));
			w105.BottomAttach = ((uint)(3));
			w105.XOptions = ((global::Gtk.AttachOptions)(4));
			w105.YOptions = ((global::Gtk.AttachOptions)(4));
			this.notebook.Add (this.tableArchiving);
			global::Gtk.Notebook.NotebookChild w106 = ((global::Gtk.Notebook.NotebookChild)(this.notebook [this.tableArchiving]));
			w106.Position = 2;
			// Notebook tab
			this.labelArchiving = new global::Gtk.Label ();
			this.labelArchiving.Name = "labelArchiving";
			this.labelArchiving.LabelProp = global::Mono.Unix.Catalog.GetString ("Archiving");
			this.notebook.SetTabLabel (this.tableArchiving, this.labelArchiving);
			this.labelArchiving.ShowAll ();
			// Container child notebook.Gtk.Notebook+NotebookChild
			this.tableAdvanced = new global::Gtk.Table (((uint)(5)), ((uint)(2)), false);
			this.tableAdvanced.Name = "tableAdvanced";
			this.tableAdvanced.RowSpacing = ((uint)(6));
			this.tableAdvanced.ColumnSpacing = ((uint)(6));
			this.tableAdvanced.BorderWidth = ((uint)(12));
			// Container child tableAdvanced.Gtk.Table+TableChild
			this.checkbuttonCombineArtwork = new global::Gtk.CheckButton ();
			this.checkbuttonCombineArtwork.CanFocus = true;
			this.checkbuttonCombineArtwork.Name = "checkbuttonCombineArtwork";
			this.checkbuttonCombineArtwork.Label = global::Mono.Unix.Catalog.GetString ("Combine High Resolution Artwork");
			this.checkbuttonCombineArtwork.DrawIndicator = true;
			this.checkbuttonCombineArtwork.UseUnderline = true;
			this.tableAdvanced.Add (this.checkbuttonCombineArtwork);
			global::Gtk.Table.TableChild w107 = ((global::Gtk.Table.TableChild)(this.tableAdvanced [this.checkbuttonCombineArtwork]));
			w107.TopAttach = ((uint)(2));
			w107.BottomAttach = ((uint)(3));
			w107.RightAttach = ((uint)(2));
			w107.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableAdvanced.Gtk.Table+TableChild
			this.checkbuttonEncryptArtwork = new global::Gtk.CheckButton ();
			this.checkbuttonEncryptArtwork.Sensitive = false;
			this.checkbuttonEncryptArtwork.CanFocus = true;
			this.checkbuttonEncryptArtwork.Name = "checkbuttonEncryptArtwork";
			this.checkbuttonEncryptArtwork.Label = global::Mono.Unix.Catalog.GetString ("Encrypt Artwork");
			this.checkbuttonEncryptArtwork.DrawIndicator = true;
			this.checkbuttonEncryptArtwork.UseUnderline = true;
			this.tableAdvanced.Add (this.checkbuttonEncryptArtwork);
			global::Gtk.Table.TableChild w108 = ((global::Gtk.Table.TableChild)(this.tableAdvanced [this.checkbuttonEncryptArtwork]));
			w108.TopAttach = ((uint)(3));
			w108.BottomAttach = ((uint)(4));
			w108.RightAttach = ((uint)(2));
			w108.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableAdvanced.Gtk.Table+TableChild
			this.comboboxDevelopmentRegion = global::Gtk.ComboBox.NewText ();
			this.comboboxDevelopmentRegion.Name = "comboboxDevelopmentRegion";
			this.tableAdvanced.Add (this.comboboxDevelopmentRegion);
			global::Gtk.Table.TableChild w109 = ((global::Gtk.Table.TableChild)(this.tableAdvanced [this.comboboxDevelopmentRegion]));
			w109.TopAttach = ((uint)(1));
			w109.BottomAttach = ((uint)(2));
			w109.LeftAttach = ((uint)(1));
			w109.RightAttach = ((uint)(2));
			w109.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableAdvanced.Gtk.Table+TableChild
			this.labelArchivingDescription1 = new global::Gtk.Label ();
			this.labelArchivingDescription1.Name = "labelArchivingDescription1";
			this.labelArchivingDescription1.Xalign = 0F;
			this.labelArchivingDescription1.LabelProp = global::Mono.Unix.Catalog.GetString ("In this section, you can define advanced behavior for developement and generation.");
			this.labelArchivingDescription1.Wrap = true;
			this.labelArchivingDescription1.Justify = ((global::Gtk.Justification)(3));
			this.tableAdvanced.Add (this.labelArchivingDescription1);
			global::Gtk.Table.TableChild w110 = ((global::Gtk.Table.TableChild)(this.tableAdvanced [this.labelArchivingDescription1]));
			w110.RightAttach = ((uint)(2));
			w110.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableAdvanced.Gtk.Table+TableChild
			this.labelDevelopmentRegion = new global::Gtk.Label ();
			this.labelDevelopmentRegion.Name = "labelDevelopmentRegion";
			this.labelDevelopmentRegion.Xalign = 1F;
			this.labelDevelopmentRegion.LabelProp = global::Mono.Unix.Catalog.GetString ("Development Language:");
			this.tableAdvanced.Add (this.labelDevelopmentRegion);
			global::Gtk.Table.TableChild w111 = ((global::Gtk.Table.TableChild)(this.tableAdvanced [this.labelDevelopmentRegion]));
			w111.TopAttach = ((uint)(1));
			w111.BottomAttach = ((uint)(2));
			w111.XOptions = ((global::Gtk.AttachOptions)(4));
			w111.YOptions = ((global::Gtk.AttachOptions)(4));
			this.notebook.Add (this.tableAdvanced);
			global::Gtk.Notebook.NotebookChild w112 = ((global::Gtk.Notebook.NotebookChild)(this.notebook [this.tableAdvanced]));
			w112.Position = 3;
			// Notebook tab
			this.labelAdvanced = new global::Gtk.Label ();
			this.labelAdvanced.Name = "labelAdvanced";
			this.labelAdvanced.LabelProp = global::Mono.Unix.Catalog.GetString ("Advanced");
			this.notebook.SetTabLabel (this.tableAdvanced, this.labelAdvanced);
			this.labelAdvanced.ShowAll ();
			this.Add (this.notebook);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
		}
	}
}
