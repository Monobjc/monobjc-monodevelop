
// This file has been generated by the GUI designer. Do not modify.
namespace MonoDevelop.Monobjc.Gui
{
	public partial class ProjectOptionsWidget
	{
		private global::Gtk.Notebook notebook;
		private global::Gtk.Table tableGeneral;
		private global::Gtk.CheckButton checkbuttonEntitlements;
		private global::Gtk.CheckButton checkbuttonSigning;
		private global::Gtk.ComboBox comboboxApplicationCategory;
		private global::Gtk.ComboBox comboboxOSVersion;
		private global::Gtk.ComboBox comboboxSigningCertificates;
		private global::Gtk.ComboBox comboboxType;
		private global::Gtk.Entry entryBundleIdentifier;
		private global::Gtk.Entry entryBundleVersion;
		private global::Gtk.FileChooserButton filechooserbuttonBundleIcon;
		private global::Gtk.FileChooserButton filechooserbuttonMainNib;
		private global::Gtk.HSeparator hseparator1;
		private global::Gtk.Label labelApplicationCategory;
		private global::Gtk.Label labelBundleIcon;
		private global::Gtk.Label labelBundleIdentifier;
		private global::Gtk.Label labelBundleVersion;
		private global::Gtk.Label labelFrameworks;
		private global::Gtk.Label labelGeneralDescription;
		private global::Gtk.Label labelMainNib;
		private global::Gtk.Label labelOSVersion;
		private global::Gtk.Label labelSigningCertificate;
		private global::Gtk.Label labelType;
		private global::Gtk.ScrolledWindow scrolledwindowFrameworks;
		private global::Gtk.TreeView treeviewFrameworks;
		private global::Gtk.Label labelGeneral;
		private global::Gtk.Table tableEmbedding;
		private global::Gtk.ComboBox comboboxArchitectures;
		private global::Gtk.HBox hboxAdditionalAssemblies;
		private global::Gtk.ScrolledWindow scrolledwindowAdditionnalAssemblies;
		private global::Gtk.TreeView treeviewAdditionnalAssemblies;
		private global::Gtk.VBox vbox3;
		private global::Gtk.Button buttonAddAdditionnalAssemblies;
		private global::Gtk.Button buttonRemoveAdditionnalAssemblies;
		private global::Gtk.HBox hboxAdditionnalLibraries;
		private global::Gtk.ScrolledWindow scrolledwindowAdditionnalLibraries;
		private global::Gtk.TreeView treeviewAdditionnalLibraries;
		private global::Gtk.VBox vbox5;
		private global::Gtk.Button buttonAddAdditionnalLibraries;
		private global::Gtk.Button buttonRemoveAdditionnalLibraries;
		private global::Gtk.HBox hboxExcludedAssemblies;
		private global::Gtk.ScrolledWindow scrolledwindowExcludedAssemblies;
		private global::Gtk.TreeView treeviewExcludedAssemblies;
		private global::Gtk.VBox vbox4;
		private global::Gtk.Button buttonAddExcludedAssemblies;
		private global::Gtk.Button buttonRemoveExcludedAssemblies;
		private global::Gtk.Label labelAdditionnalAssemblies;
		private global::Gtk.Label labelAdditionnalLibraries;
		private global::Gtk.Label labelArchitectures;
		private global::Gtk.Label labelEmbeddedFrameworks;
		private global::Gtk.Label labelEmbeddingDescription;
		private global::Gtk.Label labelExcludedAssemblies;
		private global::Gtk.ScrolledWindow scrolledwindowEmbeddedFrameworks;
		private global::Gtk.TreeView treeviewEmbeddedFrameworks;
		private global::Gtk.Label labelEmbedding;
		private global::Gtk.Table tableArchiving;
		private global::Gtk.CheckButton checkbuttonArchivePackage;
		private global::Gtk.ComboBox comboboxPackagingCertificates;
		private global::Gtk.Label labelArchivingDescription;
		private global::Gtk.Label labelPackagingCertificate;
		private global::Gtk.Label labelArchiving;
		private global::Gtk.Table tableAdvanced;
		private global::Gtk.CheckButton checkbuttonCombineArtwork;
		private global::Gtk.ComboBox comboboxDevelopmentRegion;
		private global::Gtk.Entry entryEncryptionSeed;
		private global::Gtk.Label labelArchivingDescription1;
		private global::Gtk.Label labelDevelopmentRegion;
		private global::Gtk.Label labelEncryptArtworkSeed;
		private global::Gtk.Label labelEncryptDescription;
		private global::Gtk.Label labelAdvanced;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget MonoDevelop.Monobjc.Gui.ProjectOptionsWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "MonoDevelop.Monobjc.Gui.ProjectOptionsWidget";
			// Container child MonoDevelop.Monobjc.Gui.ProjectOptionsWidget.Gtk.Container+ContainerChild
			this.notebook = new global::Gtk.Notebook ();
			this.notebook.CanFocus = true;
			this.notebook.Name = "notebook";
			this.notebook.CurrentPage = 3;
			// Container child notebook.Gtk.Notebook+NotebookChild
			this.tableGeneral = new global::Gtk.Table (((uint)(15)), ((uint)(2)), false);
			this.tableGeneral.Name = "tableGeneral";
			this.tableGeneral.RowSpacing = ((uint)(6));
			this.tableGeneral.ColumnSpacing = ((uint)(6));
			this.tableGeneral.BorderWidth = ((uint)(12));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.checkbuttonEntitlements = new global::Gtk.CheckButton ();
			this.checkbuttonEntitlements.CanFocus = true;
			this.checkbuttonEntitlements.Name = "checkbuttonEntitlements";
			this.checkbuttonEntitlements.Label = global::Mono.Unix.Catalog.GetString ("Use Entitlements (requires an App.entitlements file)");
			this.checkbuttonEntitlements.DrawIndicator = true;
			this.checkbuttonEntitlements.UseUnderline = true;
			this.tableGeneral.Add (this.checkbuttonEntitlements);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.checkbuttonEntitlements]));
			w1.TopAttach = ((uint)(11));
			w1.BottomAttach = ((uint)(12));
			w1.RightAttach = ((uint)(2));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.checkbuttonSigning = new global::Gtk.CheckButton ();
			this.checkbuttonSigning.CanFocus = true;
			this.checkbuttonSigning.Name = "checkbuttonSigning";
			this.checkbuttonSigning.Label = global::Mono.Unix.Catalog.GetString ("Code Sign Application");
			this.checkbuttonSigning.DrawIndicator = true;
			this.checkbuttonSigning.UseUnderline = true;
			this.tableGeneral.Add (this.checkbuttonSigning);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.checkbuttonSigning]));
			w2.TopAttach = ((uint)(9));
			w2.BottomAttach = ((uint)(10));
			w2.RightAttach = ((uint)(2));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.comboboxApplicationCategory = global::Gtk.ComboBox.NewText ();
			this.comboboxApplicationCategory.Name = "comboboxApplicationCategory";
			this.tableGeneral.Add (this.comboboxApplicationCategory);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.comboboxApplicationCategory]));
			w3.TopAttach = ((uint)(3));
			w3.BottomAttach = ((uint)(4));
			w3.LeftAttach = ((uint)(1));
			w3.RightAttach = ((uint)(2));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.comboboxOSVersion = global::Gtk.ComboBox.NewText ();
			this.comboboxOSVersion.Name = "comboboxOSVersion";
			this.tableGeneral.Add (this.comboboxOSVersion);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.comboboxOSVersion]));
			w4.TopAttach = ((uint)(6));
			w4.BottomAttach = ((uint)(7));
			w4.LeftAttach = ((uint)(1));
			w4.RightAttach = ((uint)(2));
			w4.XOptions = ((global::Gtk.AttachOptions)(4));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.comboboxSigningCertificates = global::Gtk.ComboBox.NewText ();
			this.comboboxSigningCertificates.Name = "comboboxSigningCertificates";
			this.tableGeneral.Add (this.comboboxSigningCertificates);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.comboboxSigningCertificates]));
			w5.TopAttach = ((uint)(10));
			w5.BottomAttach = ((uint)(11));
			w5.LeftAttach = ((uint)(1));
			w5.RightAttach = ((uint)(2));
			w5.XOptions = ((global::Gtk.AttachOptions)(4));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.comboboxType = global::Gtk.ComboBox.NewText ();
			this.comboboxType.Name = "comboboxType";
			this.tableGeneral.Add (this.comboboxType);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.comboboxType]));
			w6.TopAttach = ((uint)(1));
			w6.BottomAttach = ((uint)(2));
			w6.LeftAttach = ((uint)(1));
			w6.RightAttach = ((uint)(2));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.entryBundleIdentifier = new global::Gtk.Entry ();
			this.entryBundleIdentifier.CanFocus = true;
			this.entryBundleIdentifier.Name = "entryBundleIdentifier";
			this.entryBundleIdentifier.IsEditable = true;
			this.entryBundleIdentifier.InvisibleChar = '●';
			this.tableGeneral.Add (this.entryBundleIdentifier);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.entryBundleIdentifier]));
			w7.TopAttach = ((uint)(4));
			w7.BottomAttach = ((uint)(5));
			w7.LeftAttach = ((uint)(1));
			w7.RightAttach = ((uint)(2));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.entryBundleVersion = new global::Gtk.Entry ();
			this.entryBundleVersion.CanFocus = true;
			this.entryBundleVersion.Name = "entryBundleVersion";
			this.entryBundleVersion.IsEditable = true;
			this.entryBundleVersion.InvisibleChar = '●';
			this.tableGeneral.Add (this.entryBundleVersion);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.entryBundleVersion]));
			w8.TopAttach = ((uint)(5));
			w8.BottomAttach = ((uint)(6));
			w8.LeftAttach = ((uint)(1));
			w8.RightAttach = ((uint)(2));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.filechooserbuttonBundleIcon = new global::Gtk.FileChooserButton (global::Mono.Unix.Catalog.GetString ("Select Bundle Icon"), ((global::Gtk.FileChooserAction)(0)));
			this.filechooserbuttonBundleIcon.Name = "filechooserbuttonBundleIcon";
			this.tableGeneral.Add (this.filechooserbuttonBundleIcon);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.filechooserbuttonBundleIcon]));
			w9.TopAttach = ((uint)(8));
			w9.BottomAttach = ((uint)(9));
			w9.LeftAttach = ((uint)(1));
			w9.RightAttach = ((uint)(2));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.filechooserbuttonMainNib = new global::Gtk.FileChooserButton (global::Mono.Unix.Catalog.GetString ("Select Main NIB File"), ((global::Gtk.FileChooserAction)(0)));
			this.filechooserbuttonMainNib.Name = "filechooserbuttonMainNib";
			this.tableGeneral.Add (this.filechooserbuttonMainNib);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.filechooserbuttonMainNib]));
			w10.TopAttach = ((uint)(7));
			w10.BottomAttach = ((uint)(8));
			w10.LeftAttach = ((uint)(1));
			w10.RightAttach = ((uint)(2));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.hseparator1 = new global::Gtk.HSeparator ();
			this.hseparator1.Name = "hseparator1";
			this.tableGeneral.Add (this.hseparator1);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.hseparator1]));
			w11.TopAttach = ((uint)(2));
			w11.BottomAttach = ((uint)(3));
			w11.RightAttach = ((uint)(2));
			w11.XOptions = ((global::Gtk.AttachOptions)(4));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelApplicationCategory = new global::Gtk.Label ();
			this.labelApplicationCategory.Name = "labelApplicationCategory";
			this.labelApplicationCategory.Xalign = 1F;
			this.labelApplicationCategory.LabelProp = global::Mono.Unix.Catalog.GetString ("Application Category:");
			this.tableGeneral.Add (this.labelApplicationCategory);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelApplicationCategory]));
			w12.TopAttach = ((uint)(3));
			w12.BottomAttach = ((uint)(4));
			w12.XOptions = ((global::Gtk.AttachOptions)(4));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelBundleIcon = new global::Gtk.Label ();
			this.labelBundleIcon.Name = "labelBundleIcon";
			this.labelBundleIcon.Xalign = 1F;
			this.labelBundleIcon.LabelProp = global::Mono.Unix.Catalog.GetString ("Bundle Icon:");
			this.tableGeneral.Add (this.labelBundleIcon);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelBundleIcon]));
			w13.TopAttach = ((uint)(8));
			w13.BottomAttach = ((uint)(9));
			w13.XOptions = ((global::Gtk.AttachOptions)(4));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelBundleIdentifier = new global::Gtk.Label ();
			this.labelBundleIdentifier.Name = "labelBundleIdentifier";
			this.labelBundleIdentifier.Xalign = 1F;
			this.labelBundleIdentifier.LabelProp = global::Mono.Unix.Catalog.GetString ("Bundle Identifier:");
			this.tableGeneral.Add (this.labelBundleIdentifier);
			global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelBundleIdentifier]));
			w14.TopAttach = ((uint)(4));
			w14.BottomAttach = ((uint)(5));
			w14.XOptions = ((global::Gtk.AttachOptions)(4));
			w14.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelBundleVersion = new global::Gtk.Label ();
			this.labelBundleVersion.Name = "labelBundleVersion";
			this.labelBundleVersion.Xalign = 1F;
			this.labelBundleVersion.LabelProp = global::Mono.Unix.Catalog.GetString ("Bundle Version:");
			this.tableGeneral.Add (this.labelBundleVersion);
			global::Gtk.Table.TableChild w15 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelBundleVersion]));
			w15.TopAttach = ((uint)(5));
			w15.BottomAttach = ((uint)(6));
			w15.XOptions = ((global::Gtk.AttachOptions)(4));
			w15.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelFrameworks = new global::Gtk.Label ();
			this.labelFrameworks.Name = "labelFrameworks";
			this.labelFrameworks.Xalign = 0F;
			this.labelFrameworks.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Frameworks</b>");
			this.labelFrameworks.UseMarkup = true;
			this.tableGeneral.Add (this.labelFrameworks);
			global::Gtk.Table.TableChild w16 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelFrameworks]));
			w16.TopAttach = ((uint)(12));
			w16.BottomAttach = ((uint)(13));
			w16.RightAttach = ((uint)(2));
			w16.XOptions = ((global::Gtk.AttachOptions)(4));
			w16.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelGeneralDescription = new global::Gtk.Label ();
			this.labelGeneralDescription.Name = "labelGeneralDescription";
			this.labelGeneralDescription.Xalign = 0F;
			this.labelGeneralDescription.LabelProp = global::Mono.Unix.Catalog.GetString ("In this section, you can define the properties of the project (either an application or a library).");
			this.labelGeneralDescription.Wrap = true;
			this.labelGeneralDescription.Justify = ((global::Gtk.Justification)(3));
			this.tableGeneral.Add (this.labelGeneralDescription);
			global::Gtk.Table.TableChild w17 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelGeneralDescription]));
			w17.RightAttach = ((uint)(2));
			w17.XOptions = ((global::Gtk.AttachOptions)(4));
			w17.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelMainNib = new global::Gtk.Label ();
			this.labelMainNib.Name = "labelMainNib";
			this.labelMainNib.Xalign = 1F;
			this.labelMainNib.LabelProp = global::Mono.Unix.Catalog.GetString ("Main NIB File:");
			this.tableGeneral.Add (this.labelMainNib);
			global::Gtk.Table.TableChild w18 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelMainNib]));
			w18.TopAttach = ((uint)(7));
			w18.BottomAttach = ((uint)(8));
			w18.XOptions = ((global::Gtk.AttachOptions)(4));
			w18.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelOSVersion = new global::Gtk.Label ();
			this.labelOSVersion.Name = "labelOSVersion";
			this.labelOSVersion.Xalign = 1F;
			this.labelOSVersion.LabelProp = global::Mono.Unix.Catalog.GetString ("Deployment Target:");
			this.tableGeneral.Add (this.labelOSVersion);
			global::Gtk.Table.TableChild w19 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelOSVersion]));
			w19.TopAttach = ((uint)(6));
			w19.BottomAttach = ((uint)(7));
			w19.XOptions = ((global::Gtk.AttachOptions)(4));
			w19.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelSigningCertificate = new global::Gtk.Label ();
			this.labelSigningCertificate.Name = "labelSigningCertificate";
			this.labelSigningCertificate.Xalign = 1F;
			this.labelSigningCertificate.LabelProp = global::Mono.Unix.Catalog.GetString ("Signing Certificate:");
			this.tableGeneral.Add (this.labelSigningCertificate);
			global::Gtk.Table.TableChild w20 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelSigningCertificate]));
			w20.TopAttach = ((uint)(10));
			w20.BottomAttach = ((uint)(11));
			w20.XOptions = ((global::Gtk.AttachOptions)(4));
			w20.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.labelType = new global::Gtk.Label ();
			this.labelType.Name = "labelType";
			this.labelType.Xalign = 1F;
			this.labelType.LabelProp = global::Mono.Unix.Catalog.GetString ("Project Type:");
			this.tableGeneral.Add (this.labelType);
			global::Gtk.Table.TableChild w21 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.labelType]));
			w21.TopAttach = ((uint)(1));
			w21.BottomAttach = ((uint)(2));
			w21.XOptions = ((global::Gtk.AttachOptions)(4));
			w21.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableGeneral.Gtk.Table+TableChild
			this.scrolledwindowFrameworks = new global::Gtk.ScrolledWindow ();
			this.scrolledwindowFrameworks.CanFocus = true;
			this.scrolledwindowFrameworks.Name = "scrolledwindowFrameworks";
			this.scrolledwindowFrameworks.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child scrolledwindowFrameworks.Gtk.Container+ContainerChild
			this.treeviewFrameworks = new global::Gtk.TreeView ();
			this.treeviewFrameworks.CanFocus = true;
			this.treeviewFrameworks.Name = "treeviewFrameworks";
			this.treeviewFrameworks.HeadersVisible = false;
			this.scrolledwindowFrameworks.Add (this.treeviewFrameworks);
			this.tableGeneral.Add (this.scrolledwindowFrameworks);
			global::Gtk.Table.TableChild w23 = ((global::Gtk.Table.TableChild)(this.tableGeneral [this.scrolledwindowFrameworks]));
			w23.TopAttach = ((uint)(13));
			w23.BottomAttach = ((uint)(14));
			w23.RightAttach = ((uint)(2));
			w23.XOptions = ((global::Gtk.AttachOptions)(4));
			this.notebook.Add (this.tableGeneral);
			// Notebook tab
			this.labelGeneral = new global::Gtk.Label ();
			this.labelGeneral.Name = "labelGeneral";
			this.labelGeneral.LabelProp = global::Mono.Unix.Catalog.GetString ("General");
			this.notebook.SetTabLabel (this.tableGeneral, this.labelGeneral);
			this.labelGeneral.ShowAll ();
			// Container child notebook.Gtk.Notebook+NotebookChild
			this.tableEmbedding = new global::Gtk.Table (((uint)(11)), ((uint)(2)), false);
			this.tableEmbedding.Name = "tableEmbedding";
			this.tableEmbedding.RowSpacing = ((uint)(6));
			this.tableEmbedding.ColumnSpacing = ((uint)(6));
			this.tableEmbedding.BorderWidth = ((uint)(12));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.comboboxArchitectures = global::Gtk.ComboBox.NewText ();
			this.comboboxArchitectures.Name = "comboboxArchitectures";
			this.tableEmbedding.Add (this.comboboxArchitectures);
			global::Gtk.Table.TableChild w25 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.comboboxArchitectures]));
			w25.TopAttach = ((uint)(1));
			w25.BottomAttach = ((uint)(2));
			w25.LeftAttach = ((uint)(1));
			w25.RightAttach = ((uint)(2));
			w25.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.hboxAdditionalAssemblies = new global::Gtk.HBox ();
			this.hboxAdditionalAssemblies.Name = "hboxAdditionalAssemblies";
			this.hboxAdditionalAssemblies.Spacing = 6;
			// Container child hboxAdditionalAssemblies.Gtk.Box+BoxChild
			this.scrolledwindowAdditionnalAssemblies = new global::Gtk.ScrolledWindow ();
			this.scrolledwindowAdditionnalAssemblies.CanFocus = true;
			this.scrolledwindowAdditionnalAssemblies.Name = "scrolledwindowAdditionnalAssemblies";
			this.scrolledwindowAdditionnalAssemblies.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child scrolledwindowAdditionnalAssemblies.Gtk.Container+ContainerChild
			this.treeviewAdditionnalAssemblies = new global::Gtk.TreeView ();
			this.treeviewAdditionnalAssemblies.CanFocus = true;
			this.treeviewAdditionnalAssemblies.Name = "treeviewAdditionnalAssemblies";
			this.treeviewAdditionnalAssemblies.HeadersVisible = false;
			this.scrolledwindowAdditionnalAssemblies.Add (this.treeviewAdditionnalAssemblies);
			this.hboxAdditionalAssemblies.Add (this.scrolledwindowAdditionnalAssemblies);
			global::Gtk.Box.BoxChild w27 = ((global::Gtk.Box.BoxChild)(this.hboxAdditionalAssemblies [this.scrolledwindowAdditionnalAssemblies]));
			w27.Position = 0;
			// Container child hboxAdditionalAssemblies.Gtk.Box+BoxChild
			this.vbox3 = new global::Gtk.VBox ();
			this.vbox3.Name = "vbox3";
			this.vbox3.Spacing = 6;
			// Container child vbox3.Gtk.Box+BoxChild
			this.buttonAddAdditionnalAssemblies = new global::Gtk.Button ();
			this.buttonAddAdditionnalAssemblies.CanFocus = true;
			this.buttonAddAdditionnalAssemblies.Name = "buttonAddAdditionnalAssemblies";
			this.buttonAddAdditionnalAssemblies.UseUnderline = true;
			this.buttonAddAdditionnalAssemblies.Label = global::Mono.Unix.Catalog.GetString ("Add");
			global::Gtk.Image w28 = new global::Gtk.Image ();
			w28.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-add", global::Gtk.IconSize.Menu);
			this.buttonAddAdditionnalAssemblies.Image = w28;
			this.vbox3.Add (this.buttonAddAdditionnalAssemblies);
			global::Gtk.Box.BoxChild w29 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.buttonAddAdditionnalAssemblies]));
			w29.Position = 0;
			w29.Expand = false;
			w29.Fill = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.buttonRemoveAdditionnalAssemblies = new global::Gtk.Button ();
			this.buttonRemoveAdditionnalAssemblies.CanFocus = true;
			this.buttonRemoveAdditionnalAssemblies.Name = "buttonRemoveAdditionnalAssemblies";
			this.buttonRemoveAdditionnalAssemblies.UseUnderline = true;
			this.buttonRemoveAdditionnalAssemblies.Label = global::Mono.Unix.Catalog.GetString ("Remove");
			global::Gtk.Image w30 = new global::Gtk.Image ();
			w30.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-delete", global::Gtk.IconSize.Menu);
			this.buttonRemoveAdditionnalAssemblies.Image = w30;
			this.vbox3.Add (this.buttonRemoveAdditionnalAssemblies);
			global::Gtk.Box.BoxChild w31 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.buttonRemoveAdditionnalAssemblies]));
			w31.Position = 1;
			w31.Expand = false;
			w31.Fill = false;
			this.hboxAdditionalAssemblies.Add (this.vbox3);
			global::Gtk.Box.BoxChild w32 = ((global::Gtk.Box.BoxChild)(this.hboxAdditionalAssemblies [this.vbox3]));
			w32.Position = 1;
			w32.Expand = false;
			w32.Fill = false;
			this.tableEmbedding.Add (this.hboxAdditionalAssemblies);
			global::Gtk.Table.TableChild w33 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.hboxAdditionalAssemblies]));
			w33.TopAttach = ((uint)(5));
			w33.BottomAttach = ((uint)(6));
			w33.RightAttach = ((uint)(2));
			w33.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.hboxAdditionnalLibraries = new global::Gtk.HBox ();
			this.hboxAdditionnalLibraries.Name = "hboxAdditionnalLibraries";
			this.hboxAdditionnalLibraries.Spacing = 6;
			// Container child hboxAdditionnalLibraries.Gtk.Box+BoxChild
			this.scrolledwindowAdditionnalLibraries = new global::Gtk.ScrolledWindow ();
			this.scrolledwindowAdditionnalLibraries.CanFocus = true;
			this.scrolledwindowAdditionnalLibraries.Name = "scrolledwindowAdditionnalLibraries";
			this.scrolledwindowAdditionnalLibraries.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child scrolledwindowAdditionnalLibraries.Gtk.Container+ContainerChild
			this.treeviewAdditionnalLibraries = new global::Gtk.TreeView ();
			this.treeviewAdditionnalLibraries.CanFocus = true;
			this.treeviewAdditionnalLibraries.Name = "treeviewAdditionnalLibraries";
			this.treeviewAdditionnalLibraries.HeadersVisible = false;
			this.scrolledwindowAdditionnalLibraries.Add (this.treeviewAdditionnalLibraries);
			this.hboxAdditionnalLibraries.Add (this.scrolledwindowAdditionnalLibraries);
			global::Gtk.Box.BoxChild w35 = ((global::Gtk.Box.BoxChild)(this.hboxAdditionnalLibraries [this.scrolledwindowAdditionnalLibraries]));
			w35.Position = 0;
			// Container child hboxAdditionnalLibraries.Gtk.Box+BoxChild
			this.vbox5 = new global::Gtk.VBox ();
			this.vbox5.Name = "vbox5";
			this.vbox5.Spacing = 6;
			// Container child vbox5.Gtk.Box+BoxChild
			this.buttonAddAdditionnalLibraries = new global::Gtk.Button ();
			this.buttonAddAdditionnalLibraries.CanFocus = true;
			this.buttonAddAdditionnalLibraries.Name = "buttonAddAdditionnalLibraries";
			this.buttonAddAdditionnalLibraries.UseUnderline = true;
			this.buttonAddAdditionnalLibraries.Label = global::Mono.Unix.Catalog.GetString ("Add");
			global::Gtk.Image w36 = new global::Gtk.Image ();
			w36.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-add", global::Gtk.IconSize.Menu);
			this.buttonAddAdditionnalLibraries.Image = w36;
			this.vbox5.Add (this.buttonAddAdditionnalLibraries);
			global::Gtk.Box.BoxChild w37 = ((global::Gtk.Box.BoxChild)(this.vbox5 [this.buttonAddAdditionnalLibraries]));
			w37.Position = 0;
			w37.Expand = false;
			w37.Fill = false;
			// Container child vbox5.Gtk.Box+BoxChild
			this.buttonRemoveAdditionnalLibraries = new global::Gtk.Button ();
			this.buttonRemoveAdditionnalLibraries.CanFocus = true;
			this.buttonRemoveAdditionnalLibraries.Name = "buttonRemoveAdditionnalLibraries";
			this.buttonRemoveAdditionnalLibraries.UseUnderline = true;
			this.buttonRemoveAdditionnalLibraries.Label = global::Mono.Unix.Catalog.GetString ("Remove");
			global::Gtk.Image w38 = new global::Gtk.Image ();
			w38.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-delete", global::Gtk.IconSize.Menu);
			this.buttonRemoveAdditionnalLibraries.Image = w38;
			this.vbox5.Add (this.buttonRemoveAdditionnalLibraries);
			global::Gtk.Box.BoxChild w39 = ((global::Gtk.Box.BoxChild)(this.vbox5 [this.buttonRemoveAdditionnalLibraries]));
			w39.Position = 1;
			w39.Expand = false;
			w39.Fill = false;
			this.hboxAdditionnalLibraries.Add (this.vbox5);
			global::Gtk.Box.BoxChild w40 = ((global::Gtk.Box.BoxChild)(this.hboxAdditionnalLibraries [this.vbox5]));
			w40.Position = 1;
			w40.Expand = false;
			w40.Fill = false;
			this.tableEmbedding.Add (this.hboxAdditionnalLibraries);
			global::Gtk.Table.TableChild w41 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.hboxAdditionnalLibraries]));
			w41.TopAttach = ((uint)(9));
			w41.BottomAttach = ((uint)(10));
			w41.RightAttach = ((uint)(2));
			w41.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.hboxExcludedAssemblies = new global::Gtk.HBox ();
			this.hboxExcludedAssemblies.Name = "hboxExcludedAssemblies";
			this.hboxExcludedAssemblies.Spacing = 6;
			// Container child hboxExcludedAssemblies.Gtk.Box+BoxChild
			this.scrolledwindowExcludedAssemblies = new global::Gtk.ScrolledWindow ();
			this.scrolledwindowExcludedAssemblies.CanFocus = true;
			this.scrolledwindowExcludedAssemblies.Name = "scrolledwindowExcludedAssemblies";
			this.scrolledwindowExcludedAssemblies.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child scrolledwindowExcludedAssemblies.Gtk.Container+ContainerChild
			this.treeviewExcludedAssemblies = new global::Gtk.TreeView ();
			this.treeviewExcludedAssemblies.CanFocus = true;
			this.treeviewExcludedAssemblies.Name = "treeviewExcludedAssemblies";
			this.treeviewExcludedAssemblies.HeadersVisible = false;
			this.scrolledwindowExcludedAssemblies.Add (this.treeviewExcludedAssemblies);
			this.hboxExcludedAssemblies.Add (this.scrolledwindowExcludedAssemblies);
			global::Gtk.Box.BoxChild w43 = ((global::Gtk.Box.BoxChild)(this.hboxExcludedAssemblies [this.scrolledwindowExcludedAssemblies]));
			w43.Position = 0;
			// Container child hboxExcludedAssemblies.Gtk.Box+BoxChild
			this.vbox4 = new global::Gtk.VBox ();
			this.vbox4.Name = "vbox4";
			this.vbox4.Spacing = 6;
			// Container child vbox4.Gtk.Box+BoxChild
			this.buttonAddExcludedAssemblies = new global::Gtk.Button ();
			this.buttonAddExcludedAssemblies.CanFocus = true;
			this.buttonAddExcludedAssemblies.Name = "buttonAddExcludedAssemblies";
			this.buttonAddExcludedAssemblies.UseUnderline = true;
			this.buttonAddExcludedAssemblies.Label = global::Mono.Unix.Catalog.GetString ("Add");
			global::Gtk.Image w44 = new global::Gtk.Image ();
			w44.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-add", global::Gtk.IconSize.Menu);
			this.buttonAddExcludedAssemblies.Image = w44;
			this.vbox4.Add (this.buttonAddExcludedAssemblies);
			global::Gtk.Box.BoxChild w45 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.buttonAddExcludedAssemblies]));
			w45.Position = 0;
			w45.Expand = false;
			w45.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.buttonRemoveExcludedAssemblies = new global::Gtk.Button ();
			this.buttonRemoveExcludedAssemblies.CanFocus = true;
			this.buttonRemoveExcludedAssemblies.Name = "buttonRemoveExcludedAssemblies";
			this.buttonRemoveExcludedAssemblies.UseUnderline = true;
			this.buttonRemoveExcludedAssemblies.Label = global::Mono.Unix.Catalog.GetString ("Remove");
			global::Gtk.Image w46 = new global::Gtk.Image ();
			w46.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-delete", global::Gtk.IconSize.Menu);
			this.buttonRemoveExcludedAssemblies.Image = w46;
			this.vbox4.Add (this.buttonRemoveExcludedAssemblies);
			global::Gtk.Box.BoxChild w47 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.buttonRemoveExcludedAssemblies]));
			w47.Position = 1;
			w47.Expand = false;
			w47.Fill = false;
			this.hboxExcludedAssemblies.Add (this.vbox4);
			global::Gtk.Box.BoxChild w48 = ((global::Gtk.Box.BoxChild)(this.hboxExcludedAssemblies [this.vbox4]));
			w48.Position = 1;
			w48.Expand = false;
			w48.Fill = false;
			this.tableEmbedding.Add (this.hboxExcludedAssemblies);
			global::Gtk.Table.TableChild w49 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.hboxExcludedAssemblies]));
			w49.TopAttach = ((uint)(7));
			w49.BottomAttach = ((uint)(8));
			w49.RightAttach = ((uint)(2));
			w49.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.labelAdditionnalAssemblies = new global::Gtk.Label ();
			this.labelAdditionnalAssemblies.Name = "labelAdditionnalAssemblies";
			this.labelAdditionnalAssemblies.Xalign = 0F;
			this.labelAdditionnalAssemblies.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Additionnal Assemblies</b>");
			this.labelAdditionnalAssemblies.UseMarkup = true;
			this.tableEmbedding.Add (this.labelAdditionnalAssemblies);
			global::Gtk.Table.TableChild w50 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.labelAdditionnalAssemblies]));
			w50.TopAttach = ((uint)(4));
			w50.BottomAttach = ((uint)(5));
			w50.RightAttach = ((uint)(2));
			w50.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.labelAdditionnalLibraries = new global::Gtk.Label ();
			this.labelAdditionnalLibraries.Name = "labelAdditionnalLibraries";
			this.labelAdditionnalLibraries.Xalign = 0F;
			this.labelAdditionnalLibraries.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Additionnal Libraries</b>");
			this.labelAdditionnalLibraries.UseMarkup = true;
			this.tableEmbedding.Add (this.labelAdditionnalLibraries);
			global::Gtk.Table.TableChild w51 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.labelAdditionnalLibraries]));
			w51.TopAttach = ((uint)(8));
			w51.BottomAttach = ((uint)(9));
			w51.RightAttach = ((uint)(2));
			w51.XOptions = ((global::Gtk.AttachOptions)(4));
			w51.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.labelArchitectures = new global::Gtk.Label ();
			this.labelArchitectures.Name = "labelArchitectures";
			this.labelArchitectures.Xalign = 1F;
			this.labelArchitectures.LabelProp = global::Mono.Unix.Catalog.GetString ("Target Mac OS Architectures:");
			this.tableEmbedding.Add (this.labelArchitectures);
			global::Gtk.Table.TableChild w52 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.labelArchitectures]));
			w52.TopAttach = ((uint)(1));
			w52.BottomAttach = ((uint)(2));
			w52.XOptions = ((global::Gtk.AttachOptions)(4));
			w52.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.labelEmbeddedFrameworks = new global::Gtk.Label ();
			this.labelEmbeddedFrameworks.Name = "labelEmbeddedFrameworks";
			this.labelEmbeddedFrameworks.Xalign = 0F;
			this.labelEmbeddedFrameworks.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Embedded Frameworks</b>");
			this.labelEmbeddedFrameworks.UseMarkup = true;
			this.tableEmbedding.Add (this.labelEmbeddedFrameworks);
			global::Gtk.Table.TableChild w53 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.labelEmbeddedFrameworks]));
			w53.TopAttach = ((uint)(2));
			w53.BottomAttach = ((uint)(3));
			w53.RightAttach = ((uint)(2));
			w53.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.labelEmbeddingDescription = new global::Gtk.Label ();
			this.labelEmbeddingDescription.Name = "labelEmbeddingDescription";
			this.labelEmbeddingDescription.Xalign = 0F;
			this.labelEmbeddingDescription.LabelProp = global::Mono.Unix.Catalog.GetString ("In this section, you can define what will be embedded in the application bundle (additional assemblies or native libraries).");
			this.labelEmbeddingDescription.Wrap = true;
			this.labelEmbeddingDescription.Justify = ((global::Gtk.Justification)(3));
			this.tableEmbedding.Add (this.labelEmbeddingDescription);
			global::Gtk.Table.TableChild w54 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.labelEmbeddingDescription]));
			w54.RightAttach = ((uint)(2));
			w54.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.labelExcludedAssemblies = new global::Gtk.Label ();
			this.labelExcludedAssemblies.Name = "labelExcludedAssemblies";
			this.labelExcludedAssemblies.Xalign = 0F;
			this.labelExcludedAssemblies.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Excluded Assemblies</b>");
			this.labelExcludedAssemblies.UseMarkup = true;
			this.tableEmbedding.Add (this.labelExcludedAssemblies);
			global::Gtk.Table.TableChild w55 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.labelExcludedAssemblies]));
			w55.TopAttach = ((uint)(6));
			w55.BottomAttach = ((uint)(7));
			w55.RightAttach = ((uint)(2));
			w55.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableEmbedding.Gtk.Table+TableChild
			this.scrolledwindowEmbeddedFrameworks = new global::Gtk.ScrolledWindow ();
			this.scrolledwindowEmbeddedFrameworks.CanFocus = true;
			this.scrolledwindowEmbeddedFrameworks.Name = "scrolledwindowEmbeddedFrameworks";
			this.scrolledwindowEmbeddedFrameworks.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child scrolledwindowEmbeddedFrameworks.Gtk.Container+ContainerChild
			this.treeviewEmbeddedFrameworks = new global::Gtk.TreeView ();
			this.treeviewEmbeddedFrameworks.CanFocus = true;
			this.treeviewEmbeddedFrameworks.Name = "treeviewEmbeddedFrameworks";
			this.treeviewEmbeddedFrameworks.HeadersVisible = false;
			this.scrolledwindowEmbeddedFrameworks.Add (this.treeviewEmbeddedFrameworks);
			this.tableEmbedding.Add (this.scrolledwindowEmbeddedFrameworks);
			global::Gtk.Table.TableChild w57 = ((global::Gtk.Table.TableChild)(this.tableEmbedding [this.scrolledwindowEmbeddedFrameworks]));
			w57.TopAttach = ((uint)(3));
			w57.BottomAttach = ((uint)(4));
			w57.RightAttach = ((uint)(2));
			this.notebook.Add (this.tableEmbedding);
			global::Gtk.Notebook.NotebookChild w58 = ((global::Gtk.Notebook.NotebookChild)(this.notebook [this.tableEmbedding]));
			w58.Position = 1;
			// Notebook tab
			this.labelEmbedding = new global::Gtk.Label ();
			this.labelEmbedding.Name = "labelEmbedding";
			this.labelEmbedding.LabelProp = global::Mono.Unix.Catalog.GetString ("Embedding");
			this.notebook.SetTabLabel (this.tableEmbedding, this.labelEmbedding);
			this.labelEmbedding.ShowAll ();
			// Container child notebook.Gtk.Notebook+NotebookChild
			this.tableArchiving = new global::Gtk.Table (((uint)(4)), ((uint)(2)), false);
			this.tableArchiving.Name = "tableArchiving";
			this.tableArchiving.RowSpacing = ((uint)(6));
			this.tableArchiving.ColumnSpacing = ((uint)(6));
			this.tableArchiving.BorderWidth = ((uint)(12));
			// Container child tableArchiving.Gtk.Table+TableChild
			this.checkbuttonArchivePackage = new global::Gtk.CheckButton ();
			this.checkbuttonArchivePackage.CanFocus = true;
			this.checkbuttonArchivePackage.Name = "checkbuttonArchivePackage";
			this.checkbuttonArchivePackage.Label = global::Mono.Unix.Catalog.GetString ("Generate an archive package");
			this.checkbuttonArchivePackage.DrawIndicator = true;
			this.checkbuttonArchivePackage.UseUnderline = true;
			this.tableArchiving.Add (this.checkbuttonArchivePackage);
			global::Gtk.Table.TableChild w59 = ((global::Gtk.Table.TableChild)(this.tableArchiving [this.checkbuttonArchivePackage]));
			w59.TopAttach = ((uint)(1));
			w59.BottomAttach = ((uint)(2));
			w59.RightAttach = ((uint)(2));
			w59.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableArchiving.Gtk.Table+TableChild
			this.comboboxPackagingCertificates = global::Gtk.ComboBox.NewText ();
			this.comboboxPackagingCertificates.Name = "comboboxPackagingCertificates";
			this.tableArchiving.Add (this.comboboxPackagingCertificates);
			global::Gtk.Table.TableChild w60 = ((global::Gtk.Table.TableChild)(this.tableArchiving [this.comboboxPackagingCertificates]));
			w60.TopAttach = ((uint)(2));
			w60.BottomAttach = ((uint)(3));
			w60.LeftAttach = ((uint)(1));
			w60.RightAttach = ((uint)(2));
			w60.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableArchiving.Gtk.Table+TableChild
			this.labelArchivingDescription = new global::Gtk.Label ();
			this.labelArchivingDescription.Name = "labelArchivingDescription";
			this.labelArchivingDescription.Xalign = 0F;
			this.labelArchivingDescription.LabelProp = global::Mono.Unix.Catalog.GetString ("In this section, you can define if you want to generate an archive package for the application bundle. It is required if you plan to submit the application to the Mac AppStore.");
			this.labelArchivingDescription.Wrap = true;
			this.labelArchivingDescription.Justify = ((global::Gtk.Justification)(3));
			this.tableArchiving.Add (this.labelArchivingDescription);
			global::Gtk.Table.TableChild w61 = ((global::Gtk.Table.TableChild)(this.tableArchiving [this.labelArchivingDescription]));
			w61.RightAttach = ((uint)(2));
			w61.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableArchiving.Gtk.Table+TableChild
			this.labelPackagingCertificate = new global::Gtk.Label ();
			this.labelPackagingCertificate.Name = "labelPackagingCertificate";
			this.labelPackagingCertificate.Xalign = 1F;
			this.labelPackagingCertificate.LabelProp = global::Mono.Unix.Catalog.GetString ("Packaging Certificate:");
			this.tableArchiving.Add (this.labelPackagingCertificate);
			global::Gtk.Table.TableChild w62 = ((global::Gtk.Table.TableChild)(this.tableArchiving [this.labelPackagingCertificate]));
			w62.TopAttach = ((uint)(2));
			w62.BottomAttach = ((uint)(3));
			w62.XOptions = ((global::Gtk.AttachOptions)(4));
			w62.YOptions = ((global::Gtk.AttachOptions)(4));
			this.notebook.Add (this.tableArchiving);
			global::Gtk.Notebook.NotebookChild w63 = ((global::Gtk.Notebook.NotebookChild)(this.notebook [this.tableArchiving]));
			w63.Position = 2;
			// Notebook tab
			this.labelArchiving = new global::Gtk.Label ();
			this.labelArchiving.Name = "labelArchiving";
			this.labelArchiving.LabelProp = global::Mono.Unix.Catalog.GetString ("Archiving");
			this.notebook.SetTabLabel (this.tableArchiving, this.labelArchiving);
			this.labelArchiving.ShowAll ();
			// Container child notebook.Gtk.Notebook+NotebookChild
			this.tableAdvanced = new global::Gtk.Table (((uint)(6)), ((uint)(2)), false);
			this.tableAdvanced.Name = "tableAdvanced";
			this.tableAdvanced.RowSpacing = ((uint)(6));
			this.tableAdvanced.ColumnSpacing = ((uint)(6));
			this.tableAdvanced.BorderWidth = ((uint)(12));
			// Container child tableAdvanced.Gtk.Table+TableChild
			this.checkbuttonCombineArtwork = new global::Gtk.CheckButton ();
			this.checkbuttonCombineArtwork.CanFocus = true;
			this.checkbuttonCombineArtwork.Name = "checkbuttonCombineArtwork";
			this.checkbuttonCombineArtwork.Label = global::Mono.Unix.Catalog.GetString ("Combine High Resolution Artwork");
			this.checkbuttonCombineArtwork.DrawIndicator = true;
			this.checkbuttonCombineArtwork.UseUnderline = true;
			this.tableAdvanced.Add (this.checkbuttonCombineArtwork);
			global::Gtk.Table.TableChild w64 = ((global::Gtk.Table.TableChild)(this.tableAdvanced [this.checkbuttonCombineArtwork]));
			w64.TopAttach = ((uint)(2));
			w64.BottomAttach = ((uint)(3));
			w64.RightAttach = ((uint)(2));
			w64.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableAdvanced.Gtk.Table+TableChild
			this.comboboxDevelopmentRegion = global::Gtk.ComboBox.NewText ();
			this.comboboxDevelopmentRegion.Name = "comboboxDevelopmentRegion";
			this.tableAdvanced.Add (this.comboboxDevelopmentRegion);
			global::Gtk.Table.TableChild w65 = ((global::Gtk.Table.TableChild)(this.tableAdvanced [this.comboboxDevelopmentRegion]));
			w65.TopAttach = ((uint)(1));
			w65.BottomAttach = ((uint)(2));
			w65.LeftAttach = ((uint)(1));
			w65.RightAttach = ((uint)(2));
			w65.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableAdvanced.Gtk.Table+TableChild
			this.entryEncryptionSeed = new global::Gtk.Entry ();
			this.entryEncryptionSeed.CanFocus = true;
			this.entryEncryptionSeed.Name = "entryEncryptionSeed";
			this.entryEncryptionSeed.IsEditable = true;
			this.entryEncryptionSeed.InvisibleChar = '●';
			this.tableAdvanced.Add (this.entryEncryptionSeed);
			global::Gtk.Table.TableChild w66 = ((global::Gtk.Table.TableChild)(this.tableAdvanced [this.entryEncryptionSeed]));
			w66.TopAttach = ((uint)(4));
			w66.BottomAttach = ((uint)(5));
			w66.LeftAttach = ((uint)(1));
			w66.RightAttach = ((uint)(2));
			w66.XOptions = ((global::Gtk.AttachOptions)(4));
			w66.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableAdvanced.Gtk.Table+TableChild
			this.labelArchivingDescription1 = new global::Gtk.Label ();
			this.labelArchivingDescription1.Name = "labelArchivingDescription1";
			this.labelArchivingDescription1.Xalign = 0F;
			this.labelArchivingDescription1.LabelProp = global::Mono.Unix.Catalog.GetString ("In this section, you can define advanced behavior for developement and generation.");
			this.labelArchivingDescription1.Wrap = true;
			this.labelArchivingDescription1.Justify = ((global::Gtk.Justification)(3));
			this.tableAdvanced.Add (this.labelArchivingDescription1);
			global::Gtk.Table.TableChild w67 = ((global::Gtk.Table.TableChild)(this.tableAdvanced [this.labelArchivingDescription1]));
			w67.RightAttach = ((uint)(2));
			w67.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableAdvanced.Gtk.Table+TableChild
			this.labelDevelopmentRegion = new global::Gtk.Label ();
			this.labelDevelopmentRegion.Name = "labelDevelopmentRegion";
			this.labelDevelopmentRegion.Xalign = 1F;
			this.labelDevelopmentRegion.LabelProp = global::Mono.Unix.Catalog.GetString ("Development Language:");
			this.tableAdvanced.Add (this.labelDevelopmentRegion);
			global::Gtk.Table.TableChild w68 = ((global::Gtk.Table.TableChild)(this.tableAdvanced [this.labelDevelopmentRegion]));
			w68.TopAttach = ((uint)(1));
			w68.BottomAttach = ((uint)(2));
			w68.XOptions = ((global::Gtk.AttachOptions)(4));
			w68.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableAdvanced.Gtk.Table+TableChild
			this.labelEncryptArtworkSeed = new global::Gtk.Label ();
			this.labelEncryptArtworkSeed.Name = "labelEncryptArtworkSeed";
			this.labelEncryptArtworkSeed.Xalign = 1F;
			this.labelEncryptArtworkSeed.LabelProp = global::Mono.Unix.Catalog.GetString ("Encryption Seed:");
			this.tableAdvanced.Add (this.labelEncryptArtworkSeed);
			global::Gtk.Table.TableChild w69 = ((global::Gtk.Table.TableChild)(this.tableAdvanced [this.labelEncryptArtworkSeed]));
			w69.TopAttach = ((uint)(4));
			w69.BottomAttach = ((uint)(5));
			w69.XOptions = ((global::Gtk.AttachOptions)(4));
			w69.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableAdvanced.Gtk.Table+TableChild
			this.labelEncryptDescription = new global::Gtk.Label ();
			this.labelEncryptDescription.Name = "labelEncryptDescription";
			this.labelEncryptDescription.Xalign = 0F;
			this.labelEncryptDescription.LabelProp = global::Mono.Unix.Catalog.GetString ("You have the ability to encrypt content files in order to protect them from a direct re-use. The encryption is done by using the AES algorithm (the key is derived from the seed).");
			this.labelEncryptDescription.Wrap = true;
			this.tableAdvanced.Add (this.labelEncryptDescription);
			global::Gtk.Table.TableChild w70 = ((global::Gtk.Table.TableChild)(this.tableAdvanced [this.labelEncryptDescription]));
			w70.TopAttach = ((uint)(3));
			w70.BottomAttach = ((uint)(4));
			w70.RightAttach = ((uint)(2));
			w70.XOptions = ((global::Gtk.AttachOptions)(4));
			w70.YOptions = ((global::Gtk.AttachOptions)(4));
			this.notebook.Add (this.tableAdvanced);
			global::Gtk.Notebook.NotebookChild w71 = ((global::Gtk.Notebook.NotebookChild)(this.notebook [this.tableAdvanced]));
			w71.Position = 3;
			// Notebook tab
			this.labelAdvanced = new global::Gtk.Label ();
			this.labelAdvanced.Name = "labelAdvanced";
			this.labelAdvanced.LabelProp = global::Mono.Unix.Catalog.GetString ("Advanced");
			this.notebook.SetTabLabel (this.tableAdvanced, this.labelAdvanced);
			this.labelAdvanced.ShowAll ();
			this.Add (this.notebook);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
		}
	}
}
